name: Total LOC
on:
  schedule:
    - cron: "25 1 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  count-loc:
    runs-on: ubuntu-latest
    env:
      GH_USER: Rrrapce
    steps:
      - name: Checkout profile repo
        uses: actions/checkout@v4

      - name: Auth GH CLI
        run: |
          echo "${{ github.token }}" | gh auth login --with-token

      - name: List repos (no forks/archived)
        run: |
          gh repo list "$GH_USER" --limit 200 --json name,isFork,archived \
          | jq -r '.[] | select(.isFork==false and .archived==false) | .name' > repos.txt
          echo "Repos:"; cat repos.txt

      - name: Clone all repos (shallow)
        run: |
          mkdir -p /tmp/allrepos
          while read -r r; do
            echo "Cloning $GH_USER/$r"
            git clone --depth 1 "https://github.com/$GH_USER/$r.git" "/tmp/allrepos/$r" || true
          done < repos.txt

      - name: Install scc (fast SLOC counter)
        run: |
          curl -L https://github.com/boyter/scc/releases/latest/download/scc_Linux_x86_64.tar.gz -o scc.tgz
          tar -xzf scc.tgz
          sudo mv scc /usr/local/bin/scc

      - name: Count LOC
        run: |
          EXCLUDES="--exclude-dir=node_modules --exclude-dir=dist --exclude-dir=build --exclude-dir=.git --exclude-dir=bin --exclude-dir=obj --exclude-dir=.venv --exclude-dir=venv"
          scc $EXCLUDES --format json /tmp/allrepos > loc.json
          echo "LOC JSON size:" $(wc -c < loc.json)
          python3 - << 'PY'
import json, locale, os
locale.setlocale(locale.LC_ALL, '')
with open('loc.json','r', encoding='utf-8') as f:
    data = json.load(f)
# Saberi "Code" metrike (fallback ako nema 'Total' unosa)
total = 0
for item in data:
    if 'Code' in item:
        total += int(item['Code'])
# Format sa tačkama kao razdjelnikom hiljada
fmt = f"{total:,}".replace(",", ".")
open('total_loc.txt','w', encoding='utf-8').write(fmt)
print("TOTAL_LOC:", fmt)
PY

      - name: Update README (between markers)
        run: |
          TOTAL_LOC=$(cat total_loc.txt)
          python3 - << 'PY'
import os, sys, re
start = "<!--TOTAL_LOC_START-->"
end   = "<!--TOTAL_LOC_END-->"
line  = "**Total lines of code:** " + open('total_loc.txt','r',encoding='utf-8').read().strip()
with open('README.md','r',encoding='utf-8') as f:
    txt = f.read()
if start in txt and end in txt:
    new = re.sub(rf"{re.escape(start)}.*?{re.escape(end)}", f"{start}\n{line}\n{end}", txt, flags=re.S)
else:
    # ako markeri ne postoje, dodaj na kraj
    new = txt.rstrip()+"\n\n"+start+"\n"+line+"\n"+end+"\n"
with open('README.md','w',encoding='utf-8') as f:
    f.write(new)
print("README updated.")
PY

      - name: Commit
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "actions@github.com"
          git add README.md loc.json total_loc.txt || true
          git commit -m "Update Total LOC" || echo "No changes"
          git push
